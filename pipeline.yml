---
groups:
- name: all
  jobs:
  - fluentd-cloudwatch
  - elasticsearch-24
  - mongo-32
  - deploy-kubernetes-staging
  - deploy-kubernetes-broker-staging
  - acceptance-tests-staging
  - deploy-kubernetes-production
  - deploy-kubernetes-broker-production
  - acceptance-tests-production
- name: release
  jobs:
  - fluentd-cloudwatch
  - elasticsearch-24
  - mongo-32
- name: deploy
  jobs:
  - deploy-kubernetes-staging
  - deploy-kubernetes-broker-staging
  - acceptance-tests-staging
  - deploy-kubernetes-production
  - deploy-kubernetes-broker-production
  - acceptance-tests-production

params:
  staging:
    cf: &cf-staging
      CF_API_URL: {{cf-api-url-staging}}
      CF_USERNAME: {{cf-deploy-username-staging}}
      CF_PASSWORD: {{cf-deploy-password-staging}}
      CF_ORGANIZATION: {{cf-organization-staging}}
      CF_SPACE: {{cf-space-staging}}
    cf: &cf-staging-tests
      CF_API_URL: {{cf-api-url-staging}}
      CF_USERNAME: {{cf-deploy-username-staging}}
      CF_PASSWORD: {{cf-deploy-password-staging}}
      CF_ORGANIZATION: {{cf-organization-staging}}
      CF_SPACE: {{cf-space-staging-acctests}}
    bosh-errand: &bosh-errand-staging
      BOSH_TARGET: {{kubernetes-staging-deployment-bosh-target}}
      BOSH_USERNAME: {{kubernetes-staging-deployment-bosh-username}}
      BOSH_PASSWORD: {{kubernetes-staging-deployment-bosh-password}}
      BOSH_DEPLOYMENT_NAME: {{kubernetes-staging-deployment-bosh-deployment}}
      BOSH_CACERT: common/master-bosh.crt
  production:
    cf: &cf-production
      CF_API_URL: {{cf-api-url-production}}
      CF_USERNAME: {{cf-deploy-username-production}}
      CF_PASSWORD: {{cf-deploy-password-production}}
      CF_ORGANIZATION: {{cf-organization-production}}
      CF_SPACE: {{cf-space-production}}
    cf: &cf-production-tests
      CF_API_URL: {{cf-api-url-production}}
      CF_USERNAME: {{cf-deploy-username-production}}
      CF_PASSWORD: {{cf-deploy-password-production}}
      CF_ORGANIZATION: {{cf-organization-production}}
      CF_SPACE: {{cf-space-production-acctests}}
    bosh-errand: &bosh-errand-production
      BOSH_TARGET: {{kubernetes-production-deployment-bosh-target}}
      BOSH_USERNAME: {{kubernetes-production-deployment-bosh-username}}
      BOSH_PASSWORD: {{kubernetes-production-deployment-bosh-password}}
      BOSH_DEPLOYMENT_NAME: {{kubernetes-production-deployment-bosh-deployment}}
      BOSH_CACERT: common/master-bosh.crt

jobs:
- name: fluentd-cloudwatch
  plan:
  - get: fluentd-cloudwatch-config
    trigger: true
  - put: docker-hub-fluentd-cloudwatch
    params:
      build: fluentd-cloudwatch-config/images/fluentd-cloudwatch

- name: elasticsearch-24
  plan:
  - get: kubernetes-broker-images
    trigger: true
  - put: docker-hub-elasticsearch-24
    params:
      build: kubernetes-broker-images/custom_images/docker-elasticsearch-kubernetes-auth-24
- name: mongo-32
  plan:
  - get: kubernetes-broker-images
    trigger: true
  - put: docker-hub-mongo-32
    params:
      build: kubernetes-broker-images/custom_images/mongo32

- name: deploy-kubernetes-staging
  serial: true
  plan:
  - aggregate:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: kubernetes-release
      params:
        submodules: none
    - get: kubernetes-config
      trigger: true
    - get: kubernetes-release-tarball
      trigger: true
    - get: common-secret
      resource: common-staging
      trigger: true
    - get: kubernetes-stemcell
      trigger: true
    - get: consul-boshrelease
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-staging
  - task: kubernetes-manifest
    file: kubernetes-config/build-k8s-manifest.yml
    params:
      CLOUDWATCH_PARAMS: {{cloudwatch-params-staging}}
      KUBE2IAM_PARAMS: {{kube2iam-params-staging}}
      RIEMANN_PODSTATUS_PARAMS: {{riemann-podstatus-params-staging}}
      TARGET_ENVIRONMENT: staging
  - put: kubernetes-staging-deployment
    params: &deployment-params
      cert: common/master-bosh.crt
      manifest: kubernetes-manifest/manifest.yml
      releases:
      - kubernetes-release-tarball/*.tgz
      - consul-boshrelease/*.tgz
      stemcells:
      - kubernetes-stemcell/*.tgz
  - task: create-kubernetes-dns
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ERRAND: create-kubernetes-dns
      <<: *bosh-errand-staging
  - task: create-kubernetes-monitoring
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ERRAND: create-kubernetes-monitoring
      <<: *bosh-errand-staging
  - task: apply-kubernetes-manifests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ERRAND: apply-kubernetes-manifests
      <<: *bosh-errand-staging
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy kubernetes on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed kubernetes on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

- name: deploy-kubernetes-broker-staging
  serial: true
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: kubernetes-broker
      trigger: true
    - get: kubernetes-config
      passed: [deploy-kubernetes-staging]
    - get: kubernetes-staging-deployment
      passed: [deploy-kubernetes-staging]
      trigger: true
  - task: run-tests
    file: kubernetes-config/run-tests.yml
  - put: kubernetes-broker-staging-deployment
    params:
      manifest: kubernetes-broker/manifest.yml
      path: kubernetes-broker
      current_app_name: kubernetes-broker
      environment_variables:
        AUTH_USER: {{broker-auth-user-staging}}
        AUTH_PASS: {{broker-auth-pass-staging}}
        CONNECTOR_TYPE: static
        CONSUL_DOMAIN: {{consul-domain-staging}}
        CLUSTER_API_SERVER: {{api-server-staging}}
        CLUSTER_USERNAME: {{cluster-username-staging}}
        CLUSTER_PASSWORD: {{cluster-password-staging}}
        CF_CLIENT_ID: kubernetes-client
        CF_CLIENT_SECRET: {{cf-client-secret-staging}}
        CF_TOKEN_URL: {{cf-token-url-staging}}
        CF_API_ENDPOINT: {{cf-api-url-staging}}
        CF_TOKEN_KEY: {{cf-token-key-staging}}
  - task: register-service-broker-staging
    file: pipeline-tasks/register-service-broker.yml
    params:
      <<: *cf-staging
      BROKER_NAME: kubernetes-broker
      AUTH_USER: {{broker-auth-user-staging}}
      AUTH_PASS: {{broker-auth-pass-staging}}
      SERVICES: {{broker-service-names-staging}}
      SERVICE_ORGANIZATION: {{broker-service-organization-staging}}

- name: acceptance-tests-staging
  serial: true
  plan:
  - aggregate:
    - get: kubernetes-config
      passed: [deploy-kubernetes-broker-staging]
      trigger: true
    - get: kubernetes-broker
      passed: [deploy-kubernetes-broker-staging]
      trigger: true
    # Get resources from upstream jobs for use in production deploy
    - get: kubernetes-release
      passed: [deploy-kubernetes-staging]
      params:
        submodules: none
    - get: kubernetes-release-tarball
      passed: [deploy-kubernetes-staging]
    - get: kubernetes-stemcell
    - get: consul-boshrelease
      passed: [deploy-kubernetes-staging]
  - aggregate:
    - task: acceptance-test-redis28-standard
      file: kubernetes-config/acceptance/run-acceptance-test.yml
      params:
        <<: *cf-staging-tests
        APP_NAME: redis28-test
        SERVICE_NAME: redis28
        PLAN_NAME: standard
        TEST_PATH: kubernetes-config/acceptance/redis28
    - task: acceptance-test-mongo32-standard
      file: kubernetes-config/acceptance/run-acceptance-test.yml
      params:
        <<: *cf-staging-tests
        APP_NAME: mongodb32-test
        SERVICE_NAME: mongodb32
        PLAN_NAME: standard
        TEST_PATH: kubernetes-config/acceptance/mongodb32
    - task: acceptance-test-elasticsearch24-persistent
      file: kubernetes-config/acceptance/run-acceptance-test.yml
      params:
        <<: *cf-staging-tests
        APP_NAME: elasticsearch24-test
        SERVICE_NAME: elasticsearch24
        PLAN_NAME: 1x
        TEST_PATH: kubernetes-config/acceptance/elasticsearch24
    # - task: acceptance-test-mysql56-persistent
    #   file: kubernetes-config/acceptance/run-acceptance-test.yml
    #   params:
    #     <<: *cf-staging
    #     APP_NAME: mysql56-test
    #     SERVICE_NAME: mysql56-multinode
    #     PLAN_NAME: persistent
    #     TEST_PATH: kubernetes-config/acceptance/sql
    #     MANIFEST_FILE: manifest-mysql56-multinode.yml
    # - task: acceptance-test-postgresql94-persistent
    #   file: kubernetes-config/acceptance/run-acceptance-test.yml
    #   params:
    #     <<: *cf-staging
    #     APP_NAME: postgresql94-test
    #     SERVICE_NAME: postgresql94-multinode
    #     PLAN_NAME: persistent
    #     TEST_PATH: kubernetes-config/acceptance/sql
    #     MANIFEST_FILE: manifest-postgresql94-multinode.yml

- name: deploy-kubernetes-production
  serial: true
  plan:
  - aggregate:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: kubernetes-release
      passed: [acceptance-tests-staging]
      params:
        submodules: none
    # all triggers set to false until k8s AWS volume issues are sorted
    # once that happens it's ok to set all triggers below back to true
    - get: kubernetes-config
      trigger: false
      passed: [acceptance-tests-staging]
    - get: kubernetes-release-tarball
      passed: [acceptance-tests-staging]
      trigger: false
    - get: common-secret
      resource: common-production
      trigger: false
    - get: kubernetes-stemcell
      passed: [acceptance-tests-staging]
      trigger: false
    - get: consul-boshrelease
      passed: [acceptance-tests-staging]
      trigger: false
    - get: terraform-yaml
      resource: terraform-yaml-production
  - task: kubernetes-manifest
    file: kubernetes-config/build-k8s-manifest.yml
    params:
      CLOUDWATCH_PARAMS: {{cloudwatch-params-production}}
      KUBE2IAM_PARAMS: {{kube2iam-params-production}}
      RIEMANN_PODSTATUS_PARAMS: {{riemann-podstatus-params-production}}
      TARGET_ENVIRONMENT: production
  - put: kubernetes-production-deployment
    params: *deployment-params
  - task: create-kubernetes-dns
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ERRAND: create-kubernetes-dns
      <<: *bosh-errand-production
  - task: create-kubernetes-monitoring
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ERRAND: create-kubernetes-monitoring
      <<: *bosh-errand-production
  - task: apply-kubernetes-manifests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ERRAND: apply-kubernetes-manifests
      <<: *bosh-errand-production
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy kubernetes on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed kubernetes on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

- name: deploy-kubernetes-broker-production
  serial: true
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: kubernetes-broker
      passed: [acceptance-tests-staging]
      trigger: true
    - get: kubernetes-config
      passed: [deploy-kubernetes-production]
      trigger: true
  - put: kubernetes-broker-production-deployment
    params:
      manifest: kubernetes-broker/manifest.yml
      path: kubernetes-broker
      current_app_name: kubernetes-broker
      environment_variables:
        AUTH_USER: {{broker-auth-user-production}}
        AUTH_PASS: {{broker-auth-pass-production}}
        CONNECTOR_TYPE: static
        CONSUL_DOMAIN: {{consul-domain-production}}
        CLUSTER_API_SERVER: {{api-server-production}}
        CLUSTER_USERNAME: {{cluster-username-production}}
        CLUSTER_PASSWORD: {{cluster-password-production}}
        CF_CLIENT_ID: kubernetes-client
        CF_CLIENT_SECRET: {{cf-client-secret-production}}
        CF_TOKEN_URL: {{cf-token-url-production}}
        CF_API_ENDPOINT: {{cf-api-url-production}}
        CF_TOKEN_KEY: {{cf-token-key-production}}
  - task: register-service-broker-production
    file: pipeline-tasks/register-service-broker.yml
    params:
      <<: *cf-production
      BROKER_NAME: kubernetes-broker
      AUTH_USER: {{broker-auth-user-production}}
      AUTH_PASS: {{broker-auth-pass-production}}
      SERVICES: {{broker-service-names-production}}
      SERVICE_ORGANIZATION: {{broker-service-organization-production}}

- name: acceptance-tests-production
  serial: true
  plan:
  - aggregate:
    - get: kubernetes-config
      passed: [deploy-kubernetes-broker-production]
      trigger: true
    - get: kubernetes-broker
      passed: [deploy-kubernetes-broker-production]
      trigger: true
  - aggregate:
    - task: acceptance-test-redis28-standard
      file: kubernetes-config/acceptance/run-acceptance-test.yml
      params:
        <<: *cf-production-tests
        APP_NAME: redis28-test
        SERVICE_NAME: redis28
        PLAN_NAME: standard
        TEST_PATH: kubernetes-config/acceptance/redis28
    - task: acceptance-test-mongo32-standard
      file: kubernetes-config/acceptance/run-acceptance-test.yml
      params:
        <<: *cf-production-tests
        APP_NAME: mongodb32-test
        SERVICE_NAME: mongodb32
        PLAN_NAME: standard
        TEST_PATH: kubernetes-config/acceptance/mongodb32
    - task: acceptance-test-elasticsearch24-persistent
      file: kubernetes-config/acceptance/run-acceptance-test.yml
      params:
        <<: *cf-production-tests
        APP_NAME: elasticsearch24-test
        SERVICE_NAME: elasticsearch24
        PLAN_NAME: 1x
        TEST_PATH: kubernetes-config/acceptance/elasticsearch24
    # - task: acceptance-test-mysql56-persistent
    #   file: kubernetes-config/acceptance/run-acceptance-test.yml
    #   params:
    #     <<: *cf-production
    #     APP_NAME: mysql56-test
    #     SERVICE_NAME: mysql56-multinode
    #     PLAN_NAME: persistent
    #     TEST_PATH: kubernetes-config/acceptance/sql
    #     MANIFEST_FILE: manifest-mysql56-multinode.yml
    # - task: acceptance-test-postgresql94-persistent
    #   file: kubernetes-config/acceptance/run-acceptance-test.yml
    #   params:
    #     <<: *cf-production
    #     APP_NAME: postgresql94-test
    #     SERVICE_NAME: postgresql94-multinode
    #     PLAN_NAME: persistent
    #     TEST_PATH: kubernetes-config/acceptance/sql
    #     MANIFEST_FILE: manifest-postgresql94-multinode.yml

resources:
- name: master-bosh-root-cert
  type: s3-iam
  source:
    bucket: {{kubernetes-production-private-bucket}}
    region_name: {{aws-region}}
    versioned_file: master-bosh.crt

- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: kubernetes-release
  type: git
  source:
    uri: {{kubernetes-release-git-url}}
    branch: {{kubernetes-release-git-branch}}

- name: kubernetes-broker
  type: git
  source:
    uri: {{kubernetes-broker-git-url}}
    branch: {{kubernetes-broker-git-branch}}

- name: kubernetes-config
  type: git
  source:
    uri: {{kubernetes-config-git-url}}
    branch: {{kubernetes-config-git-branch}}

- name: kubernetes-stemcell
  type: s3-iam
  source:
    bucket: {{stemcell-bucket}}
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
    region_name: {{aws-region}}

- name: consul-boshrelease
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/consul-boshrelease

- name: common-staging
  type: cg-common
  source:
    region: {{aws-region}}
    bucket_name: {{kubernetes-staging-private-bucket}}
    secrets_file: kubernetes.yml
    secrets_passphrase: {{kubernetes-staging-private-passphrase}}
    bosh_cert: bosh.pem

- name: common-production
  type: cg-common
  source:
    region: {{aws-region}}
    bucket_name: {{kubernetes-production-private-bucket}}
    secrets_file: kubernetes.yml
    secrets_passphrase: {{kubernetes-production-private-passphrase}}
    bosh_cert: bosh.pem

- name: kubernetes-staging-deployment
  type: 18f-bosh-deployment
  source:
    target: {{kubernetes-staging-deployment-bosh-target}}
    username: {{kubernetes-staging-deployment-bosh-username}}
    password: {{kubernetes-staging-deployment-bosh-password}}
    deployment: {{kubernetes-staging-deployment-bosh-deployment}}
    ignore_ssl: false

- name: kubernetes-production-deployment
  type: 18f-bosh-deployment
  source:
    target: {{kubernetes-production-deployment-bosh-target}}
    username: {{kubernetes-production-deployment-bosh-username}}
    password: {{kubernetes-production-deployment-bosh-password}}
    deployment: {{kubernetes-production-deployment-bosh-deployment}}
    ignore_ssl: false

- name: kubernetes-broker-staging-deployment
  type: cf
  source:
    api: {{cf-api-url-staging}}
    username: {{cf-deploy-username-staging}}
    password: {{cf-deploy-password-staging}}
    organization: {{cf-organization-staging}}
    space: {{cf-space-staging}}
    skip_cert_check: false

- name: kubernetes-broker-production-deployment
  type: cf
  source:
    api: {{cf-api-url-production}}
    username: {{cf-deploy-username-production}}
    password: {{cf-deploy-password-production}}
    organization: {{cf-organization-production}}
    space: {{cf-space-production}}
    skip_cert_check: false

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

- name: fluentd-cloudwatch-config
  type: git
  source:
    uri: {{kubernetes-config-git-url}}
    branch: {{kubernetes-config-git-branch}}
    paths:
    - images/fluentd-cloudwatch/*

- name: kubernetes-broker-images
  type: git
  source:
    uri: {{kubernetes-broker-git-url}}
    branch: {{kubernetes-broker-git-branch}}
    paths:
    - custom_images/*

- name: docker-hub-fluentd-cloudwatch
  type: docker-image
  source:
    email: {{docker-email}}
    username: {{docker-username}}
    password: {{docker-password}}
    repository: {{docker-repo-fluentd}}
    tag: {{docker-tag-fluentd-cloudwatch}}

- name: docker-hub-elasticsearch-24
  type: docker-image
  source:
    email: {{docker-email}}
    username: {{docker-username}}
    password: {{docker-password}}
    repository: {{docker-repo-elastic}}
    tag: {{docker-tag-elasticsearch-24}}

- name: docker-hub-mongo-32
  type: docker-image
  source:
    email: {{docker-email}}
    username: {{docker-username}}
    password: {{docker-password}}
    repository: {{docker-repo-mongo}}
    tag: {{docker-tag-mongo-32}}

- name: kubernetes-release-tarball
  type: s3-iam
  source:
    bucket: {{s3-bosh-releases-bucket}}
    regexp: kubernetes-(.*).tgz
    region_name: us-gov-west-1

- name: terraform-yaml-staging
  type: s3-iam
  source:
    bucket: {{tf-state-bucket-staging}}
    versioned_file: {{tf-state-file-staging}}
    region_name: {{aws-region}}

- name: terraform-yaml-production
  type: s3-iam
  source:
    bucket: {{tf-state-bucket-production}}
    versioned_file: {{tf-state-file-production}}
    region_name: {{aws-region}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: 18f-bosh-deployment
  type: docker-image
  source:
    repository: 18fgsa/bosh-deployment-resource

- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
